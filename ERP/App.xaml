<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ERP"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:ControlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:properties="clr-namespace:ERP.Properties"
             xmlns:CustomControls="clr-namespace:ERP.Control"
             x:Class="ERP.App"
             StartupUri="MainWindow.xaml"
             ShutdownMode="OnLastWindowClose">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Orange.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--TextBoxes-->
            <Style x:Key="MaterialDesignCustomFloatingHintTextBoxFull"
                   TargetType="TextBox"
                   BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="Height"
                        Value="38" />
                <Setter Property="Width"
                        Value="256" />
                <Setter Property="Margin"
                        Value="0,8,0,4" />
            </Style>
            <Style x:Key="MaterialDesignCustomFloatingHintTextBoxHalf"
                   TargetType="TextBox"
                   BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="Height"
                        Value="38" />
                <Setter Property="Width"
                        Value="92" />
                <Setter Property="Margin"
                        Value="0,8,0,4" />
            </Style>
            
            <!--Comboboxes-->
            <Style x:Key="MaterialDesignFloatingHintComboBoxFull"
                   TargetType="ComboBox"
                   BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                <Setter Property="Margin"
                        Value="0,6,0,4" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
                <Setter Property="Width"
                        Value="256" />
            </Style>
            <Style x:Key="MaterialDesignFloatingHintComboBoxHalf"
                   TargetType="ComboBox"
                   BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                <Setter Property="Margin"
                        Value="0,6,0,4" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
                <Setter Property="Width"
                        Value="92" />
            </Style>
            
            <!--DatePicker-->
            <Style x:Key="MaterialDesignCustomFloatingDatePickerHalf"
                   TargetType="DatePicker"
                   BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                <Setter Property="Width"
                        Value="92" />
                <Setter Property="Margin"
                        Value="0,20,0,4" />
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
            </Style>

            <!--TimePicker-->
            <Style x:Key="MaterialDesignCustomFloatingTimePickerHalf"
                   TargetType="{x:Type materialDesign:TimePicker}"
                   BasedOn="{StaticResource MaterialDesignFloatingHintTimePicker}">
                <Setter Property="Width"
                        Value="92" />
                <Setter Property="Margin"
                        Value="0,20,0,4" />
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
            </Style>

            <!--Buttons-->
            <Style x:Key="MaterialDesignCustomerHeaderButton"
                   TargetType="Button"
                   BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth"
                        Value="Depth0" />
                <Setter Property="Margin"
                        Value="10,0" />
                <Setter Property="Padding"
                        Value="4" />
                <Setter Property="materialDesign:RippleAssist.ClipToBounds"
                        Value="False" />
                <Setter Property="materialDesign:RippleAssist.IsCentered"
                        Value="True" />
                <Setter Property="materialDesign:RippleAssist.Feedback"
                        Value="{StaticResource MaterialDesignFlatButtonRipple}" />
            </Style>
            <!--DataGrid-->
            
            <Style x:Key="MaterialDesignDataGridComboBox"
                   TargetType="ComboBox"
                   BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                <Setter Property="Margin"
                        Value="0,6,0,4" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
            </Style>
            <Style x:Key="MaterialDesignTextBoxIconWrapper"
                   TargetType="{x:Type ContentControl}">
                <Setter Property="Height"
                        Value="24" />
                <Setter Property="Width"
                        Value="24" />
                <Setter Property="Margin"
                        Value="12,24,12,0" />
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="IsTabStop"
                        Value="False" />
            </Style>
            <Style x:Key="MaterialDesignTextBoxIconWrapperTop"
                   TargetType="{x:Type ContentControl}">
                <Setter Property="Height"
                        Value="24" />
                <Setter Property="Width"
                        Value="24" />
                <Setter Property="Margin"
                        Value="16,29,16,4" />
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="IsTabStop"
                        Value="False" />
            </Style>
            <Style x:Key="MaterialDesignCustomButton"
                   TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2"
                                                   SnapsToDevicePixels="True"
                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                   StrokeThickness="1"
                                                   StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground"
                        Value="#747474" />
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="FontWeight"
                        Value="Medium" />
                <Setter Property="FontSize"
                        Value="14" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="16,4" />
                <Setter Property="Height"
                        Value="32" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                    <Grid>
                                        <Border x:Name="border"
                                                CornerRadius="2">
                                            <Border.Effect>
                                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)"
                                                         RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <Converters:ShadowConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Border.Effect>
                                        </Border>
                                        <Border Background="{DynamicResource MaterialDesignBackground}"
                                                HorizontalAlignment="Left"
                                                Opacity="0.4">
                                            <Border.Width>
                                                <MultiBinding UpdateSourceTrigger="Default">
                                                    <MultiBinding.Converter>
                                                        <Converters:RangeLengthConverter />
                                                    </MultiBinding.Converter>
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.Minimum)"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.Maximum)"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.Value)"
                                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                                    <Binding Path="ActualWidth"
                                                             RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}" />
                                                </MultiBinding>
                                            </Border.Width>
                                        </Border>
                                    </Grid>
                                </AdornerDecorator>
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}"
                                                       Content="{TemplateBinding Content}"
                                                       Focusable="False"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       Padding="{TemplateBinding Padding}"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="materialDesign:ShadowAssist.Darken"
                                            TargetName="border"
                                            Value="True" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource PrimaryHueMidBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="True">
                                    <Setter Property="materialDesign:ShadowAssist.Darken"
                                            TargetName="border"
                                            Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.23" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MaterialDesignCard"
                   TargetType="materialDesign:Card">
                <Setter Property="Margin"
                        Value="4" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth"
                        Value="Depth1" />
                <Setter Property="Background"
                        Value="White" />
            </Style>
            <Style x:Key="MaterialDesignGrid"
                   TargetType="{x:Type DataGrid}"
                   BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="CanUserSortColumns"
                        Value="True" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="AutoGenerateColumns"
                        Value="False" />
                <Setter Property="RowHeight"
                        Value="48" />
                <Setter Property="materialDesign:DataGridAssist.CellPadding"
                        Value="13 14 8 14" />
                <Setter Property="materialDesign:DataGridAssist.ColumnHeaderPadding"
                        Value="8" />
                <Setter Property="Margin"
                        Value="0,0,0,48" />
                <Setter Property="CanUserAddRows"
                        Value="True" />
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="False" />
            </Style>
            <Style x:Key="MaterialDesignCustomGridComboBox"
                   TargetType="ComboBox"
                   BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="IsEditable"
                        Value="True" />
                <Setter Property="Margin"
                        Value="0,-7,0,-8" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="StaysOpenOnEdit"
                        Value="True" />
                <Setter Property="IsDropDownOpen"
                        Value="True" />
                <Setter Property="Padding"
                        Value="0,7,0,8" />
            </Style>
            <Style x:Key="MaterialDesignGridButton"
                   BasedOn="{StaticResource MaterialDesignFlatButton}"
                   TargetType="Button">
                <Setter Property="Padding"
                        Value="0,4" />
                <Setter Property="Margin"
                        Value="0,-7" />
                <Setter Property="Height"
                        Value="32" />
                <Setter Property="Width"
                        Value="32" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="HorizontalAlignment"
                        Value="Center" />
            </Style>
            <Style x:Key="MaterialDesignCell"
                   TargetType="{x:Type DataGridCell}"
                   BasedOn="{StaticResource MaterialDesignDataGridCell}">
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="true">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                    </Trigger>

                    <Trigger Property="IsMouseOver"
                             Value="true">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MaterialDesignRow"
                   TargetType="{x:Type DataGridRow}"
                   BasedOn="{StaticResource MaterialDesignDataGridRow}">
                <Style.Triggers>
                    <!--<Trigger Property="IsSelected"
                             Value="true">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                    </Trigger>-->

                    <!--<Trigger Property="IsMouseOver"
                             Value="true">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                    </Trigger>-->
                </Style.Triggers>
            </Style>
            <!--<Style x:Name="HorizontalStepper"
                   TargetType="{x:Type CustomControls:Stepper}">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="IconBackground"
                        Value="{StaticResource PrimaryHueMidBrush}" />
                <Setter Property="Foreground"
                        Value="#616161" />
                <Setter Property="materialDesign:RippleAssist.Feedback"
                        Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CustomControls:Stepper}">
                            <Grid x:Name="MainGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"
                                                      x:Name="FirstColumn" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*"
                                                      x:Name="LastColumn" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0"
                                        BorderBrush="#1E000000"
                                        BorderThickness="0,0,0,1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        Visibility="Visible"
                                        Margin="0,0,-8,0"
                                        x:Name="LeftBorder"
                                        Panel.ZIndex="1" />
                                <materialDesign:Ripple Grid.Column="1">
                                    <Grid x:Name="SubGrid"
                                          Height="72"
                                          Cursor="Hand">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Column="0"
                                                x:Name="IconBackground"
                                                CornerRadius="12"
                                                Height="24"
                                                Width="24"
                                                Margin="16,8,8,8"
                                                Background="{TemplateBinding IconBackground}">
                                            <Grid>
                                                <ContentControl Content="{TemplateBinding Icon}"
                                                                x:Name="IconText"
                                                                FontSize="16"
                                                                FontWeight="Regular"
                                                                IsTabStop="False"
                                                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                                Visibility="Visible"
                                                                VerticalAlignment="Center"
                                                                VerticalContentAlignment="Center"
                                                                HorizontalAlignment="Center"
                                                                HorizontalContentAlignment="Center" />
                                                <materialDesign:PackIcon x:Name="IconControl"
                                                                         Kind="Check"
                                                                         FontWeight="Regular"
                                                                         IsTabStop="False"
                                                                         Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                                         Height="16"
                                                                         Width="16"
                                                                         VerticalAlignment="Center"
                                                                         HorizontalAlignment="Center"
                                                                         Visibility="Collapsed"
                                                                         Panel.ZIndex="1" />
                                            </Grid>
                                        </Border>
                                        <ContentControl Content="{TemplateBinding StepperLabel}"
                                                        x:Name="StepperLabel"
                                                        Grid.Column="1"
                                                        VerticalAlignment="Center"
                                                        VerticalContentAlignment="Center"
                                                        IsTabStop="False"
                                                        Margin="0,0,16,2" />
                                    </Grid>
                                </materialDesign:Ripple>
                                <Border Grid.Column="2"
                                        BorderBrush="#1E000000"
                                        BorderThickness="0,0,0,1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        Visibility="Visible"
                                        x:Name="RightBorder"
                                        Margin="-8,0,0,0"
                                        Panel.ZIndex="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="true"
                                         SourceName="SubGrid">
                                    <Setter Property="Background"
                                            TargetName="SubGrid"
                                            Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                         Value="false">
                                    <Setter Property="Background"
                                            TargetName="IconBackground"
                                            Value="#61000000" />
                                </Trigger>
                                <Trigger Property="IsComplete"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="IconControl"
                                            Value="Visible" />
                                    <Setter Property="Visibility"
                                            TargetName="IconText"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsFirst"
                                         Value="true">
                                    <Setter Property="Width"
                                            TargetName="FirstColumn"
                                            Value="0" />
                                    <Setter Property="Visibility"
                                            TargetName="LeftBorder"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsLast"
                                         Value="true">
                                    <Setter Property="Width"
                                            TargetName="LastColumn"
                                            Value="0" />
                                    <Setter Property="Visibility"
                                            TargetName="RightBorder"
                                            Value="Collapsed" />
                                </Trigger>
                                
            <Trigger Property="IsPressed"
                                         Value="true"
                                         SourceName="MainGrid">
                                    <Setter Property="Background"
                                            TargetName="SubGrid"
                                            Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                                </Trigger>
            
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->
            <Style x:Name="StepperButton"
                   TargetType="{x:Type CustomControls:Stepper}">
                <Setter Property="Foreground"
                        Value="#616161" />
                <Setter Property="materialDesign:RippleAssist.Feedback"
                        Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CustomControls:Stepper}">
                            <Grid x:Name="MainGrid">
                                <Border Grid.Column="0"
                                        x:Name="IconBackground"
                                        CornerRadius="12"
                                        Height="24"
                                        Width="24"
                                        Background="#61000000"
                                        HorizontalAlignment="Center"
                                        Margin="12,8">
                                    <Grid>
                                        <ContentControl Content="{TemplateBinding Icon}"
                                                        x:Name="IconText"
                                                        FontSize="15"
                                                        FontWeight="Regular"
                                                        IsTabStop="False"
                                                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                        Visibility="Visible"
                                                        VerticalAlignment="Center"
                                                        VerticalContentAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        HorizontalContentAlignment="Center" />
                                        <materialDesign:PackIcon x:Name="IconControl"
                                                                 Kind="Check"
                                                                 FontWeight="Regular"
                                                                 IsTabStop="False"
                                                                 Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                                 Height="16"
                                                                 Width="16"
                                                                 VerticalAlignment="Center"
                                                                 HorizontalAlignment="Center"
                                                                 Visibility="Collapsed"
                                                                 Panel.ZIndex="1" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="IconBackground"
                                            Value="{StaticResource PrimaryHueMidBrush}" />
                                </Trigger>
                                <Trigger Property="IsComplete"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="IconControl"
                                            Value="Visible" />
                                    <Setter Property="Visibility"
                                            TargetName="IconText"
                                            Value="Collapsed" />
                                    <Setter Property="Background"
                                            TargetName="IconBackground"
                                            Value="{StaticResource PrimaryHueMidBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MaterialDesignCustomNewButton"
                   BasedOn="{StaticResource MaterialDesignFlatButton}"
                   TargetType="Button">
                <Setter Property="HorizontalAlignment"
                        Value="Right" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="Width"
                        Value="32" />
                <Setter Property="Height"
                        Value="32" />
            </Style>
            <properties:Settings x:Key="Username" />
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeThickness="1"
                                       StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Tab Control-->
            <SolidColorBrush x:Key="TabItem.MouseOver.Border"
                             Color="#7EB4EA" />
            <SolidColorBrush x:Key="TabItem.Selected.Border"
                             Color="#4a148c" />
            <SolidColorBrush x:Key="TabItem.Selected.Background"
                             Color="#7c43bd" />
            <Style x:Key="TabItemStyle1"
                   TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Padding"
                        Value="16,12,16,12" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot"
                                  SnapsToDevicePixels="true">
                                <Border x:Name="mainBorder"
                                        BorderBrush="White"
                                        BorderThickness="0"
                                        Background="#7c43bd"
                                        Margin="0">
                                    <Border x:Name="innerBorder"
                                            BorderBrush="{StaticResource TabItem.Selected.Border}"
                                            BorderThickness="0,0,0,2"
                                            Background="#7c43bd"
                                            Margin="0"
                                            Opacity="0" />
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentSource="Header"
                                                  Focusable="False"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter Property="Opacity"
                                            TargetName="innerBorder"
                                            Value="1" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabControlStyle1"
                   TargetType="{x:Type TabControl}">
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource TabItem.Selected.Border}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot"
                                  ClipToBounds="true"
                                  SnapsToDevicePixels="true"
                                  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1"
                                                      Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0"
                                                   Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1"
                                                   Height="*" />
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="headerPanel"
                                          Background="Transparent"
                                          Grid.Column="0"
                                          IsItemsHost="true"
                                          Margin="0"
                                          Grid.Row="0"
                                          KeyboardNavigation.TabIndex="1"
                                          Panel.ZIndex="1"
                                          HorizontalAlignment="Center" />
                                <Border x:Name="contentPanel"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Grid.Column="0"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        Grid.Row="1"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      ContentSource="SelectedContent"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement"
                                         Value="Bottom">
                                    <Setter Property="Grid.Row"
                                            TargetName="headerPanel"
                                            Value="1" />
                                    <Setter Property="Grid.Row"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition0"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition1"
                                            Value="Auto" />
                                    <Setter Property="Margin"
                                            TargetName="headerPanel"
                                            Value="0" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                         Value="Left">
                                    <Setter Property="Grid.Row"
                                            TargetName="headerPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Row"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Column"
                                            TargetName="headerPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Column"
                                            TargetName="contentPanel"
                                            Value="1" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition0"
                                            Value="Auto" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition1"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition0"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition1"
                                            Value="0" />
                                    <Setter Property="Margin"
                                            TargetName="headerPanel"
                                            Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                         Value="Right">
                                    <Setter Property="Grid.Row"
                                            TargetName="headerPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Row"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Column"
                                            TargetName="headerPanel"
                                            Value="1" />
                                    <Setter Property="Grid.Column"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition0"
                                            Value="*" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition1"
                                            Value="Auto" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition0"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition1"
                                            Value="0" />
                                    <Setter Property="Margin"
                                            TargetName="headerPanel"
                                            Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="TextElement.Foreground"
                                            TargetName="templateRoot"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
